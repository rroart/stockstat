<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>roart</groupId>
    <artifactId>stockstat-parent</artifactId>
    <relativePath>../pom.xml</relativePath>
    <version>0.6-SNAPSHOT</version>
  </parent>
  <groupId>roart</groupId>
  <artifactId>stockstat-weba</artifactId>
  <version>0.6-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Stock Statistics Web Angular</name>
  <build>
    <plugins>
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>exec-maven-plugin</artifactId>
	<version>1.6.0</version>
	<executions>
	  <execution>
	    <id>rm package-lock.json</id>
	    <goals>
	      <goal>exec</goal>
	    </goals>
	    <phase>initialize</phase>
	    <configuration>
	      <executable>rm</executable>
	      <arguments>
		<argument>-f</argument>
		<argument>package-lock.json</argument>
	      </arguments>
	    </configuration>
	  </execution>
	  <!-- Required: The following will ensure `npm install` is called
               before anything else during the 'Default Lifecycle' -->
	  <execution>
	    <id>npm install (initialize)</id>
	    <goals>
	      <goal>exec</goal>
	    </goals>
	    <phase>initialize</phase>
	    <configuration>
	      <executable>npm</executable>
	      <arguments>
		<argument>install</argument>
	      </arguments>
	    </configuration>
	  </execution>
	  <!-- Required: The following will ensure `npm install` is called
               before anything else during the 'Clean Lifecycle' -->
	  <execution>
	    <id>npm install (clean)</id>
	    <goals>
	      <goal>exec</goal>
	    </goals>
	    <phase>pre-clean</phase>
	    <configuration>
	      <executable>npm</executable>
	      <arguments>
		<argument>install</argument>
	      </arguments>
	    </configuration>
	  </execution>
	  <!-- Required: This following calls `npm run build` where 'build' is
               the script name I used in my project, change this if yours is
               different -->
	  <execution>
	    <id>npm run build (compile)</id>
	    <goals>
	      <goal>exec</goal>
	    </goals>
	    <phase>compile</phase>
	    <configuration>
	      <executable>npm</executable>
	      <arguments>
		<argument>run</argument>
		<argument>build</argument>
	      </arguments>
	    </configuration>
	  </execution>
	  <execution>
	    <id>cdxgen</id>
	    <goals>
	      <goal>exec</goal>
	    </goals>
	    <phase>package</phase>
	    <configuration>
	      <executable>cdxgen</executable>
	      <arguments>
		<argument>.</argument>
	      </arguments>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
    </plugins>
  </build>
</project>

