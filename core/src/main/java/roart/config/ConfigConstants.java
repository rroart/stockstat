package roart.config;

import java.util.HashMap;
import java.util.Map;
import roart.calculate.CalcComplexNode;
import roart.category.CategoryConstants;

public class ConfigConstants {
    public static final String PROPFILE = "stockstat.prop";
    public static final String CONFIGFILE = "stockstat.xml";
    public static final String SPARK = "spark";
    public static final String HIBERNATE = "hibernate";
    public static final String SPARKMASTER = "sparkmaster";
    public static final String[] dbvalues = { HIBERNATE, SPARK };
    public static final String TENSORFLOW = "tensorflow";
    public static final String DATABASESPARK = "database.spark[@enable]";
    public static final String DATABASESPARKSPARKMASTER = "database.spark.sparkmaster";
    public static final String DATABASEHIBERNATE = "database.hibernate[@enable]";
    public static final String MACHINELEARNING = "machinelearning[@enable]";
    public static final String MACHINELEARNINGSPARKML = "machinelearning.sparkml[@enable]";
    public static final String MACHINELEARNINGSPARMMLSPARKMASTER = "machinelearning.sparkml.sparkmaster";
    public static final String MACHINELEARNINGSPARKMLMCP = "machinelearning.sparkml.mcp[@enable]";
    public static final String MACHINELEARNINGSPARKMLLR = "machinelearning.sparkml.lr[@enable]";
    public static final String MACHINELEARNINGTENSORFLOW = "machinelearning.tensorflow[@enable]";
    public static final String MACHINELEARNINGTENSORFLOWDNN = "machinelearning.tensorflow.dnn[@enable]";
    public static final String MACHINELEARNINGTENSORFLOWL = "machinelearning.tensorflow.l[@enable]";
    public static final String INDICATORS = "indicators[@enable]";
    public static final String INDICATORSMOVE = "indicators.move[@enable]";
    public static final String INDICATORSMACD = "indicators.macd[@enable]";
    public static final String INDICATORSMACDMACDHISTOGRAMDELTA = "indicators.macd.macdhistogramdelta[@enable]";
    public static final String INDICATORSMACDMACHHISTOGRAMDELTADAYS = "indicators.macd.macdhistogramdeltadays";

    public static final String INDICATORSMACDMACDMOMENTUMDELTA = "indicators.macd.macdmomentumdelta[@enable]";
    public static final String INDICATORSMACDACDMOMENTUMDELTADAYS = "indicators.macd.macdmomentumdeltadays";
    public static final String INDICATORSMACDRECOMMENDWEIGHTS = "indicators.macd.recommend[@enable]";
    public static final String INDICATORSMACDRECOMMENDWEIGHTSBUYHISTOGRAM = "indicators.macd.recommend.weightbuyhistogram";
    public static final String INDICATORSMACDRECOMMENDWEIGHTSBUYHISTOGRAMDELTA = "indicators.macd.recommend.weightbuyhistogramdelta";
    public static final String INDICATORSMACDRECOMMENDWEIGHTSBUYMOMENTUM = "indicators.macd.recommend.weightbuymomemtum";
    public static final String INDICATORSMACDRECOMMENDWEIGHTSBUYMOMENTUMDELTA = "indicators.macd.recommend.weightbuymomemtumdelta";
    public static final String INDICATORSMACDRECOMMENDWEIGHTSSELLHISTOGRAM = "indicators.macd.recommend.weightsellhistogram";
    public static final String INDICATORSMACDRECOMMENDWEIGHTSSELLHISTOGRAMDELTA = "indicators.macd.recommend.weightsellhistogramdelta";
    public static final String INDICATORSMACDRECOMMENDWEIGHTSSELLMOMENTUM = "indicators.macd.recommend.weightsellmomemtum";
    public static final String INDICATORSMACDRECOMMENDWEIGHTSSELLMOMENTUMDELTA = "indicators.macd.recommend.weightsellmomemtumdelta";
    public static final String INDICATORSMACDMACHINELEARNING = "indicators.macd.machinelearning[@enable]";
    public static final String INDICATORSMACDMACHINELEARNINGMOMENTUMML = "indicators.macd.machinelearning.momemtumml[@enable]";
    public static final String INDICATORSMACDMACHINELEARNINGHISTOGRAMML = "indicators.macd.machinelearning.histogramml[@enable]";
    public static final String INDICATORSMACDDAYSBEFOREZERO ="indicators.macd.daysbeforezero";
    public static final String INDICATORSMACDDAYSAFTERZERO = "indicators.macd.daysafterzero";
    public static final String INDICATORSRSI = "indicators.rsi[@enable]";
    public static final String INDICATORSRSIDELTA = "indicators.rsi.rsidelta[@enable]";
    public static final String INDICATORSRSIDELTADAYS = "indicators.rsi.rsideltadays";
    public static final String INDICATORSSTOCHRSI = "indicators.stochrsi[@enable]";
    public static final String INDICATORSSTOCHRSIDELTA = "indicators.stochrsi.stochrsidelta[@enable]";
    public static final String INDICATORSSTOCHRSIDELTADAYS = "indicators.stochrsi.stochrsideltadays";
    public static final String INDICATORSRSIRECOMMENDWEIGHTS = "indicators.rsi.recommend[@enable]";
    public static final String INDICATORSRSIRECOMMENDWEIGHTSBUY = "indicators.rsi.recommend.weightbuy";
    public static final String INDICATORSRSIRECOMMENDWEIGHTSBUYDELTA = "indicators.rsi.recommend.weightbuydelta";
    public static final String INDICATORSRSIRECOMMENDWEIGHTSSELL = "indicators.rsi.recommend.weightsell";
    public static final String INDICATORSRSIRECOMMENDWEIGHTSSELLDELTA = "indicators.rsi.recommend.weightselldelta";
    public static final String INDICATORSCCI = "indicators.cci[@enable]";
    public static final String INDICATORSCCIDELTA ="indicators.cci.ccidelta[@enable]";
    public static final String INDICATORSCCIDELTADAYS = "indicators.cci.ccideltadays";
    public static final String INDICATORSATR ="indicators.atr[@enable]";
    public static final String INDICATORSATRDELTA = "indicators.atr.atrdelta[@enable]";
    public static final String INDICATORSATRDELTADAYS = "indicators.atr.atrdeltadays";
    public static final String INDICATORSSTOCH = "indicators.stoch[@enable]";
    public static final String INDICATORSSTOCHSTOCHDELTA ="indicators.stoch.stochdelta[@enable]";
    public static final String INDICATORSSTOCHSTOCHDELTADAYS = "indicators.stoch.stochdeltadays";
    public static final String PREDICTORS = "predictors[@enable]";
    public static final String PREDICTORSLSTM = "predictors.lstm[@enable]";
    public static final String PREDICTORSLSTMWINDOWSIZE = "predictors.lstm.windowsize";
    public static final String PREDICTORSLSTMHORIZON = "predictors.lstm.horizon";
    public static final String PREDICTORSLSTMEPOCHS = "predictors.lstm.epochs";
    public static final String MISC = "misc";
    public static final String MISCPERCENTIZEPRICEINDEX = "misc.percentizepriceindex[@enable]";
    public static final String MISCMLSTATS = "misc.mlstats[@enable]";
    public static final String MISCOTHERSTATS = "misc.otherstats[@enable]";
    public static final String MISCMYDAYS = "misc.mydays";
    public static final String MISCMYTOPBOTTOM = "misc.mytopbottom";
    public static final String MISCMYTBLEDAYS = "misc.mytabledays";
    public static final String MISCMYTABLEMOVEINTERVALDAYS = "misc.mytablemoveintervaldays";
    public static final String MISCMYTABLEINTERVALDAYS = "misc.mytableintervaldays";
    public static final String MISCMYEQUALIZE = "misc.myequalize[@enable]";
    public static final String MISCMYGRAPHEQUALIZE = "misc.mygraphequalize[@enable]";
    public static final String MISCMYGRAPHEQUALIZEUNIFY = "misc.mygraphequalizeunify[@enable]";
    public static final String TESTINDICATORRECOMMENDERCOMPLEXFUTUREDAYS = "test.indicatorrecommender.complex.futuredays";
    public static final String TESTINDICATORRECOMMENDERCOMPLEXINTERVALDAYS = "test.indicatorrecommender.complex.intervaldays";
    public static final String TESTINDICATORRECOMMENDERSIMPLEFUTUREDAYS = "test.indicatorrecommender.simple.futuredays";
    public static final String TESTINDICATORRECOMMENDERSIMPLEINTERVALDAYS = "test.indicatorrecommender.simple.intervaldays";
    @Deprecated
    public static final String TESTRECOMMENDINTERVALTIMES = "test.recommend.intervaltimes";
    @Deprecated
    public static final String TESTRECOMMENDITERATIONS = "test.recommend.iterations";
    @Deprecated
    public static final String TESTRECOMMENDPERIOD = "test.recommend.period";
    public static final String EVOLUTIONGENERATIONS = "evolution.generations";
    @Deprecated
    public static final String EVOLUTIONCHILDREN = "evolution.children";
    public static final String EVOLUTIONSELECT = "evolution.select";
    public static final String EVOLUTIONELITE = "evolution.elite";
    public static final String EVOLUTIONELITECLONEANDMUTATE = "evolution.elitecloneandmutate";
    public static final String EVOLUTIONMUTATE = "evolution.mutate";
    public static final String EVOLUTIONCROSSOVER = "evolution.crossover";
    public static final String EVOLUTIONGENERATIONCREATE = "evolution.generationcreate";
    public static final String AGGREGATORS = "aggregators[@enable]";
    public static final String AGGREGATORSINDICATORRECOMMENDER = "aggregators.indicatorrecommender[@enable]";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLE = "aggregators.indicatorrecommender.simple[@enable]";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLEMACD = "aggregators.indicatorrecommender.simple.macd[@enable]";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYHISTOGRAM = "aggregators.indicatorrecommender.simple.macd.weightbuyhistogram";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYHISTOGRAMDELTA = "aggregators.indicatorrecommender.simple.macd.weightbuyhistogramdelta";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYMOMENTUM = "aggregators.indicatorrecommender.simple.macd.weightbuymomemtum";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYMOMENTUMDELTA = "aggregators.indicatorrecommender.simple.macd.weightbuymomemtumdelta";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLHISTOGRAM = "aggregators.indicatorrecommender.simple.macd.weightsellhistogram";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLHISTOGRAMDELTA = "aggregators.indicatorrecommender.simple.macd.weightsellhistogramdelta";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLMOMENTUM = "aggregators.indicatorrecommender.simple.macd.weightsellmomemtum";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLMOMENTUMDELTA = "aggregators.indicatorrecommender.simple.macd.weightsellmomemtumdelta";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLERSI = "aggregators.indicatorrecommender.simple.rsi[@enable]";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSBUYRSI = "aggregators.indicatorrecommender.simple.rsi.weightbuyrsi";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSBUYRSIDELTA = "aggregators.indicatorrecommender.simple.rsi.weightbuyrsidelta";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSSELLRSI = "aggregators.indicatorrecommender.simple.rsi.weightsellrsi";
    public static final String AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSSELLRSIDELTA = "aggregators.indicatorrecommender.simple.rsi.weightsellrsidelta";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEX = "aggregators.indicatorrecommender.complex[@enable]";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACD = "aggregators.indicatorrecommender.complex.macd[@enable]";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYHISTOGRAMNODE = "aggregators.indicatorrecommender.complex.macd.weightbuyhistogramnode";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYHISTOGRAMDELTANODE = "aggregators.indicatorrecommender.complex.macd.weightbuyhistogramdeltanode";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYMOMENTUMNODE = "aggregators.indicatorrecommender.complex.macd.weightbuymomemtumnode";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYMOMENTUMDELTANODE = "aggregators.indicatorrecommender.complex.macd.weightbuymomemtumdeltanode";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLHISTOGRAMNODE = "aggregators.indicatorrecommender.complex.macd.weightsellhistogramnode";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLHISTOGRAMDELTANODE = "aggregators.indicatorrecommender.complex.macd.weightsellhistogramdeltanode";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLMOMENTUMNODE = "aggregators.indicatorrecommender.complex.macd.weightsellmomemtumnode";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLMOMENTUMDELTANODE = "aggregators.indicatorrecommender.complex.macd.weightsellmomemtumdeltanode";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSI = "aggregators.indicatorrecommender.complex.rsi[@enable]";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSBUYRSINODE = "aggregators.indicatorrecommender.complex.rsi.weightbuyrsinode";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSBUYRSIDELTANODE = "aggregators.indicatorrecommender.complex.rsi.weightbuyrsideltanode";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSSELLRSINODE = "aggregators.indicatorrecommender.complex.rsi.weightsellrsinode";
    public static final String AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSSELLRSIDELTANODE = "aggregators.indicatorrecommender.complex.rsi.weightsellrsideltanode";
    public static final String AGGREGATORSINDICATOR = "aggregators.indicator[@enable]";
    public static final String AGGREGATORSINDICATORMACD = "aggregators.indicator.macd[@enable]";
    public static final String AGGREGATORSINDICATORRSI = "aggregators.indicator.rsi[@enable]";
    public static final String AGGREGATORSINDICATOREXTRAS = "aggregators.indicator.extras";
    public static final String AGGREGATORSINDICATOREXTRASDELTAS = "aggregators.indicator.extrasdeltas";
    public static final String AGGREGATORSINDICATORFUTUREDAYS = "aggregators.indicator.futuredays";
    public static final String AGGREGATORSINDICATORINTERVALDAYS = "aggregators.indicator.intervaldays";
    public static final String AGGREGATORSINDICATORTHRESHOLD = "aggregators.indicator.threshold";
    public static Map<String, Class> map = new HashMap();

    public static void makeTypeMap() {
        if (!map.isEmpty()) {
            return;
        }
        map.put(ConfigConstants.DATABASESPARK, Boolean.class);
        map.put(ConfigConstants.DATABASESPARKSPARKMASTER, String.class);
        map.put(ConfigConstants.DATABASEHIBERNATE, Boolean.class);
        map.put(ConfigConstants.MACHINELEARNING, Boolean.class);
        map.put(ConfigConstants.MACHINELEARNINGSPARKML, Boolean.class);
        map.put(ConfigConstants.MACHINELEARNINGSPARMMLSPARKMASTER, String.class);
        map.put(ConfigConstants.MACHINELEARNINGSPARKMLMCP, Boolean.class);
        map.put(ConfigConstants.MACHINELEARNINGSPARKMLLR, Boolean.class);
        map.put(ConfigConstants.MACHINELEARNINGTENSORFLOW, Boolean.class);
        map.put(ConfigConstants.MACHINELEARNINGTENSORFLOWDNN, Boolean.class);
        map.put(ConfigConstants.MACHINELEARNINGTENSORFLOWL, Boolean.class);
        map.put(ConfigConstants.INDICATORS, Boolean.class);
        map.put(ConfigConstants.INDICATORSMOVE, Boolean.class);
        map.put(ConfigConstants.INDICATORSMACD, Boolean.class);
        map.put(ConfigConstants.INDICATORSMACDMACDHISTOGRAMDELTA, Boolean.class);
        map.put(ConfigConstants.INDICATORSMACDMACHHISTOGRAMDELTADAYS, Integer.class);

        map.put(ConfigConstants.INDICATORSMACDMACDMOMENTUMDELTA, Boolean.class);
        map.put(ConfigConstants.INDICATORSMACDACDMOMENTUMDELTADAYS, Integer.class);
        map.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTS, Boolean.class);
        map.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSBUYHISTOGRAM, Integer.class);
        map.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSBUYHISTOGRAMDELTA, Integer.class);
        map.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSBUYMOMENTUM, Integer.class);
        map.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSBUYMOMENTUMDELTA, Integer.class);
        map.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSSELLHISTOGRAM, Integer.class);
        map.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSSELLHISTOGRAMDELTA, Integer.class);
        map.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSSELLMOMENTUM, Integer.class);
        map.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSSELLMOMENTUMDELTA, Integer.class);
        map.put(ConfigConstants.INDICATORSMACDMACHINELEARNING, Boolean.class);
        map.put(ConfigConstants.INDICATORSMACDMACHINELEARNINGMOMENTUMML, Boolean.class);
        map.put(ConfigConstants.INDICATORSMACDMACHINELEARNINGHISTOGRAMML, Boolean.class);
        map.put(ConfigConstants.INDICATORSMACDDAYSBEFOREZERO , Integer.class);
        map.put(ConfigConstants.INDICATORSMACDDAYSAFTERZERO, Integer.class);
        map.put(ConfigConstants.INDICATORSRSI, Boolean.class);
        map.put(ConfigConstants.INDICATORSRSIDELTA, Boolean.class);
        map.put(ConfigConstants.INDICATORSRSIDELTADAYS, Integer.class);
        map.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTS, Boolean.class);
        map.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTSBUY, Integer.class);
        map.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTSBUYDELTA, Integer.class);
        map.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTSSELL, Integer.class);
        map.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTSSELLDELTA, Integer.class);
        map.put(ConfigConstants.INDICATORSSTOCHRSI, Boolean.class);
        map.put(ConfigConstants.INDICATORSSTOCHRSIDELTA, Boolean.class);
        map.put(ConfigConstants.INDICATORSSTOCHRSIDELTADAYS, Integer.class);
        map.put(ConfigConstants.INDICATORSCCI, Boolean.class);
        map.put(ConfigConstants.INDICATORSCCIDELTA , Boolean.class);
        map.put(ConfigConstants.INDICATORSCCIDELTADAYS, Integer.class);
        map.put(ConfigConstants.INDICATORSATR , Boolean.class);
        map.put(ConfigConstants.INDICATORSATRDELTA, Boolean.class);
        map.put(ConfigConstants.INDICATORSATRDELTADAYS, Integer.class);
        map.put(ConfigConstants.INDICATORSSTOCH, Boolean.class);
        map.put(ConfigConstants.INDICATORSSTOCHSTOCHDELTA , Boolean.class);
        map.put(ConfigConstants.INDICATORSSTOCHSTOCHDELTADAYS, Integer.class);
        map.put(ConfigConstants.PREDICTORS, Boolean.class);
        map.put(ConfigConstants.PREDICTORSLSTM, Boolean.class);
        map.put(ConfigConstants.PREDICTORSLSTMEPOCHS, Integer.class);
        map.put(ConfigConstants.PREDICTORSLSTMHORIZON, Integer.class);
        map.put(ConfigConstants.PREDICTORSLSTMWINDOWSIZE, Integer.class);
        map.put(ConfigConstants.MISC, Boolean.class);
        map.put(ConfigConstants.MISCPERCENTIZEPRICEINDEX, Boolean.class);
        map.put(ConfigConstants.MISCMLSTATS, Boolean.class);
        map.put(ConfigConstants.MISCOTHERSTATS, Boolean.class);
        map.put(ConfigConstants.MISCMYDAYS, Integer.class);
        map.put(ConfigConstants.MISCMYTOPBOTTOM, Integer.class);
        map.put(ConfigConstants.MISCMYTBLEDAYS, Integer.class);
        map.put(ConfigConstants.MISCMYTABLEMOVEINTERVALDAYS, Integer.class);
        map.put(ConfigConstants.MISCMYTABLEINTERVALDAYS, Integer.class);
        map.put(ConfigConstants.MISCMYEQUALIZE, Boolean.class);
        map.put(ConfigConstants.MISCMYGRAPHEQUALIZE, Boolean.class);
        map.put(ConfigConstants.MISCMYGRAPHEQUALIZEUNIFY, Boolean.class);
        map.put(ConfigConstants.TESTINDICATORRECOMMENDERSIMPLEFUTUREDAYS, Integer.class);
        map.put(ConfigConstants.TESTINDICATORRECOMMENDERSIMPLEINTERVALDAYS, Integer.class);
        map.put(ConfigConstants.TESTINDICATORRECOMMENDERCOMPLEXFUTUREDAYS, Integer.class);
        map.put(ConfigConstants.TESTINDICATORRECOMMENDERCOMPLEXINTERVALDAYS, Integer.class);
        map.put(ConfigConstants.TESTRECOMMENDINTERVALTIMES, Integer.class);
        map.put(ConfigConstants.TESTRECOMMENDITERATIONS, Integer.class);
        map.put(ConfigConstants.TESTRECOMMENDPERIOD, String.class);
        map.put(ConfigConstants.EVOLUTIONGENERATIONS, Integer.class);
        map.put(ConfigConstants.EVOLUTIONCHILDREN, Integer.class);
        map.put(ConfigConstants.EVOLUTIONCROSSOVER, Integer.class);
        map.put(ConfigConstants.EVOLUTIONGENERATIONCREATE, Integer.class);
        map.put(ConfigConstants.EVOLUTIONELITE, Integer.class);
        map.put(ConfigConstants.EVOLUTIONELITECLONEANDMUTATE, Integer.class);
       map.put(ConfigConstants.EVOLUTIONMUTATE, Integer.class);
        map.put(ConfigConstants.EVOLUTIONSELECT, Integer.class);
        map.put(ConfigConstants.AGGREGATORS, Boolean.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDER, Boolean.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLE, Boolean.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACD, Boolean.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYHISTOGRAM , Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYHISTOGRAMDELTA , Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYMOMENTUM , Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYMOMENTUMDELTA , Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLHISTOGRAM , Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLHISTOGRAMDELTA, Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLMOMENTUM , Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLMOMENTUMDELTA, Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSI, Boolean.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSBUYRSI, Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSBUYRSIDELTA , Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSSELLRSI, Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSSELLRSIDELTA, Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACD, Boolean.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYHISTOGRAMNODE , String.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYHISTOGRAMDELTANODE , String.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYMOMENTUMNODE , String.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYMOMENTUMDELTANODE , String.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLHISTOGRAMNODE , String.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLHISTOGRAMDELTANODE , String.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLMOMENTUMNODE , String.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLMOMENTUMDELTANODE, String.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEX, Boolean.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSI, Boolean.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSBUYRSINODE, String.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSBUYRSIDELTANODE , String.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSSELLRSINODE, String.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSSELLRSIDELTANODE, String.class);
        map.put(ConfigConstants.AGGREGATORSINDICATOR, Boolean.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORMACD, Boolean.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORRSI, Boolean.class);
        map.put(ConfigConstants.AGGREGATORSINDICATOREXTRAS, String.class);
        map.put(ConfigConstants.AGGREGATORSINDICATOREXTRASDELTAS, Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORFUTUREDAYS, Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORINTERVALDAYS, Integer.class);
        map.put(ConfigConstants.AGGREGATORSINDICATORTHRESHOLD, Double.class);
    }

    public static Map<String, Object> deflt = new HashMap();
    public static void makeDefaultMap() {
        if (!deflt.isEmpty()) {
            return;
        }
        deflt.put(ConfigConstants.DATABASESPARK, Boolean.TRUE);
        deflt.put(ConfigConstants.DATABASESPARKSPARKMASTER, "spark://127.0.0.1:7077");
        deflt.put(ConfigConstants.DATABASEHIBERNATE, Boolean.TRUE);
        deflt.put(ConfigConstants.MACHINELEARNING, Boolean.TRUE);
        deflt.put(ConfigConstants.MACHINELEARNINGSPARKML, Boolean.TRUE);
        deflt.put(ConfigConstants.MACHINELEARNINGSPARMMLSPARKMASTER, "spark://127.0.0.1:7077");
        deflt.put(ConfigConstants.MACHINELEARNINGSPARKMLMCP, Boolean.TRUE);
        deflt.put(ConfigConstants.MACHINELEARNINGSPARKMLLR, Boolean.TRUE);
        deflt.put(ConfigConstants.MACHINELEARNINGTENSORFLOW, Boolean.TRUE);
        deflt.put(ConfigConstants.MACHINELEARNINGTENSORFLOWDNN, Boolean.TRUE);
        deflt.put(ConfigConstants.MACHINELEARNINGTENSORFLOWL, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORS, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSMOVE, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSMACD, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSMACDMACDHISTOGRAMDELTA, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSMACDMACHHISTOGRAMDELTADAYS, 3);

        deflt.put(ConfigConstants.INDICATORSMACDMACDMOMENTUMDELTA, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSMACDACDMOMENTUMDELTADAYS, 3);
        deflt.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTS, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSBUYHISTOGRAM, 40);
        deflt.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSBUYHISTOGRAMDELTA, 20);
        deflt.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSBUYMOMENTUM, 20);
        deflt.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSBUYMOMENTUMDELTA, 20);
        deflt.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSSELLHISTOGRAM, 40);
        deflt.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSSELLHISTOGRAMDELTA, 20);
        deflt.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSSELLMOMENTUM, 20);
        deflt.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSSELLMOMENTUMDELTA, 20);
        deflt.put(ConfigConstants.INDICATORSMACDMACHINELEARNING, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSMACDMACHINELEARNINGMOMENTUMML, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSMACDMACHINELEARNINGHISTOGRAMML, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSMACDDAYSBEFOREZERO , 25);
        deflt.put(ConfigConstants.INDICATORSMACDDAYSAFTERZERO, 10);
        deflt.put(ConfigConstants.INDICATORSRSI, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSRSIDELTA, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSRSIDELTADAYS, 3);
        deflt.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTS, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTSBUY, 50);
        deflt.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTSBUYDELTA, 50);
        deflt.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTSSELL, 50);
        deflt.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTSSELLDELTA, 50);
        deflt.put(ConfigConstants.INDICATORSSTOCHRSI, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSSTOCHRSIDELTA, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSSTOCHRSIDELTADAYS, 3);
        deflt.put(ConfigConstants.INDICATORSCCI, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSCCIDELTA , Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSCCIDELTADAYS, 3);
        deflt.put(ConfigConstants.INDICATORSATR , Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSATRDELTA, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSATRDELTADAYS, 3);
        deflt.put(ConfigConstants.INDICATORSSTOCH, Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSSTOCHSTOCHDELTA , Boolean.TRUE);
        deflt.put(ConfigConstants.INDICATORSSTOCHSTOCHDELTADAYS, 3);
        deflt.put(ConfigConstants.PREDICTORS, Boolean.TRUE);
        deflt.put(ConfigConstants.PREDICTORSLSTM, Boolean.TRUE);
        deflt.put(ConfigConstants.PREDICTORSLSTMEPOCHS, 5);
        deflt.put(ConfigConstants.PREDICTORSLSTMHORIZON, 5);
        deflt.put(ConfigConstants.PREDICTORSLSTMWINDOWSIZE, 3);
        deflt.put(ConfigConstants.MISC, Boolean.TRUE);
        deflt.put(ConfigConstants.MISCPERCENTIZEPRICEINDEX, Boolean.TRUE);
        deflt.put(ConfigConstants.MISCMLSTATS, Boolean.TRUE);
        deflt.put(ConfigConstants.MISCOTHERSTATS, Boolean.TRUE);
        deflt.put(ConfigConstants.MISCMYDAYS, Integer.class);
        deflt.put(ConfigConstants.MISCMYTOPBOTTOM, 10);
        deflt.put(ConfigConstants.MISCMYTBLEDAYS, 180);
        deflt.put(ConfigConstants.MISCMYTABLEMOVEINTERVALDAYS, 5);
        deflt.put(ConfigConstants.MISCMYTABLEINTERVALDAYS, 1);
        deflt.put(ConfigConstants.MISCMYEQUALIZE, Boolean.TRUE);
        deflt.put(ConfigConstants.MISCMYGRAPHEQUALIZE, Boolean.TRUE);
        deflt.put(ConfigConstants.MISCMYGRAPHEQUALIZEUNIFY, Boolean.TRUE);
        deflt.put(ConfigConstants.TESTINDICATORRECOMMENDERCOMPLEXFUTUREDAYS, 10);
        deflt.put(ConfigConstants.TESTINDICATORRECOMMENDERCOMPLEXINTERVALDAYS, 5);
        deflt.put(ConfigConstants.TESTINDICATORRECOMMENDERSIMPLEFUTUREDAYS, 10);
        deflt.put(ConfigConstants.TESTINDICATORRECOMMENDERSIMPLEINTERVALDAYS, 5);
        deflt.put(ConfigConstants.TESTRECOMMENDINTERVALTIMES, 10);
        deflt.put(ConfigConstants.TESTRECOMMENDITERATIONS, 100);
        deflt.put(ConfigConstants.TESTRECOMMENDPERIOD, CategoryConstants.PRICE);
        deflt.put(ConfigConstants.EVOLUTIONGENERATIONS, 2);
        deflt.put(ConfigConstants.EVOLUTIONCHILDREN, 4);
        deflt.put(ConfigConstants.EVOLUTIONELITE, 1);
        deflt.put(ConfigConstants.EVOLUTIONELITECLONEANDMUTATE, 0);
        deflt.put(ConfigConstants.EVOLUTIONMUTATE, 1);
        deflt.put(ConfigConstants.EVOLUTIONCROSSOVER, 1);
        deflt.put(ConfigConstants.EVOLUTIONGENERATIONCREATE, 0);
        deflt.put(ConfigConstants.EVOLUTIONSELECT, 16);
        deflt.put(ConfigConstants.AGGREGATORS, Boolean.TRUE);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDER, Boolean.TRUE);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLE, Boolean.TRUE);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACD, Boolean.TRUE);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYHISTOGRAM , 40);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYHISTOGRAMDELTA , 20);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYMOMENTUM , 20);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYMOMENTUMDELTA , 20);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLHISTOGRAM , 40);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLHISTOGRAMDELTA, 20);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLMOMENTUM , 20);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLMOMENTUMDELTA, 20);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSI, Boolean.TRUE);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSBUYRSI, 20);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSBUYRSIDELTA , 20);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSSELLRSI, 20);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSSELLRSIDELTA, 20);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEX, Boolean.TRUE);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACD, Boolean.TRUE);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYHISTOGRAMNODE , json);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYHISTOGRAMDELTANODE , json);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYMOMENTUMNODE , json);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYMOMENTUMDELTANODE , json);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLHISTOGRAMNODE , json);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLHISTOGRAMDELTANODE, json);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLMOMENTUMNODE , json);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLMOMENTUMDELTANODE, json);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSI, Boolean.TRUE);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSBUYRSINODE, json);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSBUYRSIDELTANODE , json);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSSELLRSINODE, json);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSSELLRSIDELTANODE, json);
        deflt.put(ConfigConstants.AGGREGATORSINDICATOR, Boolean.FALSE);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORMACD, Boolean.FALSE);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORRSI, Boolean.FALSE);
        deflt.put(ConfigConstants.AGGREGATORSINDICATOREXTRAS, "");
        deflt.put(ConfigConstants.AGGREGATORSINDICATOREXTRASDELTAS, 2);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORFUTUREDAYS, 10);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORINTERVALDAYS, 1);
        deflt.put(ConfigConstants.AGGREGATORSINDICATORTHRESHOLD, 0);
    }

    private final static String json = "{\"_class\": \"roart.calculate.CalcMACDNode\", \"className\":\"CalcMacdNode\",\"minMutateThresholdRange\":-5.0,\"maxMutateThresholdRange\":5.0,\"threshold\":-2.476814906438654,\"useminmaxthreshold\":true,\"usethreshold\":false,\"divideminmaxthreshold\":true,\"weight\":31.0,\"changeSignWhole\":false,\"useMax\":false}";

    public static Map<String, String> text = new HashMap();

    public static void makeTextMap() {
        if (!text.isEmpty()) {
            return;
        }
        text.put(ConfigConstants.DATABASESPARK, "Enable Spark Database backend");
        text.put(ConfigConstants.DATABASESPARKSPARKMASTER, "Database Spark Master");
        text.put(ConfigConstants.DATABASEHIBERNATE, "Enable Hibernate Database backend");
        text.put(ConfigConstants.MACHINELEARNING, "Enable machine learning");
        text.put(ConfigConstants.MACHINELEARNINGSPARKML, "Enable Spark ML");
        text.put(ConfigConstants.MACHINELEARNINGSPARMMLSPARKMASTER, "Machine Learning Spark Master");
        text.put(ConfigConstants.MACHINELEARNINGSPARKMLMCP, "Enable Spark ML MCP");
        text.put(ConfigConstants.MACHINELEARNINGSPARKMLLR, "Enable Spark ML LR");
        text.put(ConfigConstants.MACHINELEARNINGTENSORFLOW, "Enable Tensorflow");
        text.put(ConfigConstants.MACHINELEARNINGTENSORFLOWDNN, "Enable Tensorflow DNN");
        text.put(ConfigConstants.MACHINELEARNINGTENSORFLOWL, "Enable Tensorflow L");
        text.put(ConfigConstants.INDICATORS, "Enable indicators");
        text.put(ConfigConstants.INDICATORSMOVE, "Enable move indicator");
        text.put(ConfigConstants.INDICATORSMACD, "Enable MACD indicator");
        text.put(ConfigConstants.INDICATORSMACDMACDHISTOGRAMDELTA, "Enable MACD histogram delta");
        text.put(ConfigConstants.INDICATORSMACDMACHHISTOGRAMDELTADAYS, "MACD histogram delta days");

        text.put(ConfigConstants.INDICATORSMACDMACDMOMENTUMDELTA, "Enable MACD momentum delta");
        text.put(ConfigConstants.INDICATORSMACDACDMOMENTUMDELTADAYS, "MACD momentum delta days");
        text.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTS, "Enable MACD buy/sell recommendation");
        text.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSBUYHISTOGRAM, "Buy weight histogram");
        text.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSBUYHISTOGRAMDELTA, "Buy weight histogram delta");
        text.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSBUYMOMENTUM, "Buy weight momentum");
        text.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSBUYMOMENTUMDELTA, "Buy weight momentum delta");
        text.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSSELLHISTOGRAM, "Sell weight histogram");
        text.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSSELLHISTOGRAMDELTA, "Sell weight histogram delta");
        text.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSSELLMOMENTUM, "Sell weight momentum");
        text.put(ConfigConstants.INDICATORSMACDRECOMMENDWEIGHTSSELLMOMENTUMDELTA, "Sell weight momentum delta");
        text.put(ConfigConstants.INDICATORSMACDMACHINELEARNING, "Enable indicator MACD machine learning");
        text.put(ConfigConstants.INDICATORSMACDMACHINELEARNINGMOMENTUMML, "Enable indicator MACD momentum machine learning");
        text.put(ConfigConstants.INDICATORSMACDMACHINELEARNINGHISTOGRAMML, "Enable indicator MACD histogram machine learning");
        text.put(ConfigConstants.INDICATORSMACDDAYSBEFOREZERO , "Days before zero");
        text.put(ConfigConstants.INDICATORSMACDDAYSAFTERZERO, "Days after zero");
        text.put(ConfigConstants.INDICATORSRSI, "Enable indicator RSI");
        text.put(ConfigConstants.INDICATORSRSIDELTA, "Enable indicator RSI delta");
        text.put(ConfigConstants.INDICATORSRSIDELTADAYS, "RSI delta days");
        text.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTS, "Enable buy/sell indicator RSI");
        text.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTSBUY, "RSI buy weight");
        text.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTSBUYDELTA, "RSI delta buy weight");
        text.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTSSELL, "RSI sell weight");
        text.put(ConfigConstants.INDICATORSRSIRECOMMENDWEIGHTSSELLDELTA, "RSI delta sell weight");
        text.put(ConfigConstants.INDICATORSSTOCHRSI, "Enable indicator STOCH RSI");
        text.put(ConfigConstants.INDICATORSSTOCHRSIDELTA, "Enable indicator STOCH RSI delta");
        text.put(ConfigConstants.INDICATORSSTOCHRSIDELTADAYS, "STOCH RSI delta days");
        text.put(ConfigConstants.INDICATORSCCI, "Enable indicator CCI");
        text.put(ConfigConstants.INDICATORSCCIDELTA , "Enable indicator CCI delta");
        text.put(ConfigConstants.INDICATORSCCIDELTADAYS, "CCI delta days");
        text.put(ConfigConstants.INDICATORSATR , "Enable indicator ATR");
        text.put(ConfigConstants.INDICATORSATRDELTA, "Enable indicator ATR delta");
        text.put(ConfigConstants.INDICATORSATRDELTADAYS, "ATR delta days");
        text.put(ConfigConstants.INDICATORSSTOCH, "Enable indicator STOCH");
        text.put(ConfigConstants.INDICATORSSTOCHSTOCHDELTA , "Enable indicator STOCH delta");
        text.put(ConfigConstants.INDICATORSSTOCHSTOCHDELTADAYS, "STOCH delta days");
        text.put(ConfigConstants.PREDICTORS, "Enable predictors");
        text.put(ConfigConstants.PREDICTORSLSTM, "Enable LSTM predictor");
        text.put(ConfigConstants.PREDICTORSLSTMEPOCHS, "LSTM epochs");
        text.put(ConfigConstants.PREDICTORSLSTMHORIZON, "LSTM horizon");
        text.put(ConfigConstants.PREDICTORSLSTMWINDOWSIZE, "LSTM windowsize");
        text.put(ConfigConstants.MISC, "Misc");
        text.put(ConfigConstants.MISCPERCENTIZEPRICEINDEX, "Enable turning price/index into percent based on first date");
        text.put(ConfigConstants.MISCMLSTATS, "Enable ML stats for time usage");
        text.put(ConfigConstants.MISCOTHERSTATS, "Enable other stat pages");
        text.put(ConfigConstants.MISCMYDAYS, "Number of days to display");
        text.put(ConfigConstants.MISCMYTOPBOTTOM, "Number of items to display");
        text.put(ConfigConstants.MISCMYTBLEDAYS, "Table days");
        text.put(ConfigConstants.MISCMYTABLEMOVEINTERVALDAYS, "Interval days for table move");
        text.put(ConfigConstants.MISCMYTABLEINTERVALDAYS, "Table interval days");
        text.put(ConfigConstants.MISCMYEQUALIZE, "Enable equalizing");
        text.put(ConfigConstants.MISCMYGRAPHEQUALIZE, "Enable graph equalizing");
        text.put(ConfigConstants.MISCMYGRAPHEQUALIZEUNIFY, "Enable unified graph equalizing");
        text.put(ConfigConstants.TESTINDICATORRECOMMENDERSIMPLEFUTUREDAYS, "Test simple recommender future days");
        text.put(ConfigConstants.TESTINDICATORRECOMMENDERSIMPLEINTERVALDAYS, "Test simple recommender interval days");
        text.put(ConfigConstants.TESTINDICATORRECOMMENDERCOMPLEXFUTUREDAYS, "Test complex recommender future days");
        text.put(ConfigConstants.TESTINDICATORRECOMMENDERCOMPLEXINTERVALDAYS, "Test complex recommender interval days");
        text.put(ConfigConstants.TESTRECOMMENDINTERVALTIMES, "Deprecated Test recommender interval times");
        text.put(ConfigConstants.TESTRECOMMENDITERATIONS, "Deprecated Test recommender iterations");
        text.put(ConfigConstants.TESTRECOMMENDPERIOD, "Deprecated Test recommender period");
        text.put(ConfigConstants.EVOLUTIONGENERATIONS, "Evolution generations");
        text.put(ConfigConstants.EVOLUTIONCHILDREN, "Deprecated Evolution children");
        text.put(ConfigConstants.EVOLUTIONCROSSOVER, "Evolution crossover");
        text.put(ConfigConstants.EVOLUTIONGENERATIONCREATE, "Evolution create random in a generation");
        text.put(ConfigConstants.EVOLUTIONELITE, "Evolution elite");
        text.put(ConfigConstants.EVOLUTIONELITECLONEANDMUTATE, "Evolution elite clone and mutate");
        text.put(ConfigConstants.EVOLUTIONSELECT, "Evolution select population");
        text.put(ConfigConstants.EVOLUTIONMUTATE, "Evolution mutate");
        text.put(ConfigConstants.AGGREGATORS, "Enable aggregators");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDER, "Enable aggregated recommender");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLE, "Enable aggregated recommender simple");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACD, "Enable aggregated recommender simple MACD");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYHISTOGRAM , "Buy weight histogram");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYHISTOGRAMDELTA , "Buy weight histogram delta");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYMOMENTUM , "Buy weight momentum");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSBUYMOMENTUMDELTA ,"Buy weight momentum delta");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLHISTOGRAM ,"Sell weight histogram");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLHISTOGRAMDELTA, "Sell weight histogram delta");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLMOMENTUM ,"Sell weight momentum");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLEMACDWEIGHTSSELLMOMENTUMDELTA,"Sell weight momentum delta");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSI, "Enable aggregated recommender simple RSI");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSBUYRSI, "Buy weight RSI");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSBUYRSIDELTA , "Buy weight RSI delta");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSSELLRSI, "Sell weight RSI");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERSIMPLERSIWEIGHTSSELLRSIDELTA, "Sell weight RSI delta");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEX, "Enable aggregated recommender complex");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACD, "Enable aggregated recommender complex MACD");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYHISTOGRAMNODE , "Buy weight histogram node");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYHISTOGRAMDELTANODE , "Buy weight histogram delta node");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYMOMENTUMNODE , "Buy weight momentum node");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSBUYMOMENTUMDELTANODE ,"Buy weight momentum delta node");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLHISTOGRAMDELTANODE, "Sell weight histogram delta node");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLMOMENTUMNODE ,"Sell weight momentum node");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLMOMENTUMDELTANODE,"Sell weight momentum delta node");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSBUYRSINODE, "Buy weight RSI node");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSI, "Enable aggregated recommender complex RSI");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSBUYRSIDELTANODE , "Buy weight RSI delta node");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXMACDWEIGHTSSELLHISTOGRAMNODE ,"Sell weight histogram node");		
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSSELLRSINODE, "Sell weight RSI node");
        text.put(ConfigConstants.AGGREGATORSINDICATORRECOMMENDERCOMPLEXRSIWEIGHTSSELLRSIDELTANODE, "Sell weight RSI delta node");
        text.put(ConfigConstants.AGGREGATORSINDICATOR, "ML indicator enable");
        text.put(ConfigConstants.AGGREGATORSINDICATORMACD, "ML indicator MACD enable");
        text.put(ConfigConstants.AGGREGATORSINDICATORRSI, "ML indicator RSI enable");
        text.put(ConfigConstants.AGGREGATORSINDICATOREXTRAS, "ML indicator extras");
        text.put(ConfigConstants.AGGREGATORSINDICATOREXTRASDELTAS, "ML indicator extras delta days");
        text.put(ConfigConstants.AGGREGATORSINDICATORFUTUREDAYS, "ML indicator days in the future for threshold");
        text.put(ConfigConstants.AGGREGATORSINDICATORINTERVALDAYS, "ML indicator days in the future interval");
        text.put(ConfigConstants.AGGREGATORSINDICATORTHRESHOLD, "ML indicator threshold for classifier");

    }


}
