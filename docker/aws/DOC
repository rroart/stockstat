export PATH=~/.local/bin:$PATH
# aws configure get region (us-east-1)

aws eks create-cluster --name stockstat-cluster
# not real ids
aws eks create-cluster --name stockstat-cluster --role-arn arn:aws:iam::0123456789:role/eksServiceRole --resources-vpc-config subnetIds=subnet-0123456789,securityGroupIds=sg-0123456789
aws cloudformation create-stack --stack-name stockstat-cluster-worker-nodes --template-url https://amazon-eks.s3-us-west-2.amazonaws.com/cloudformation/2018-08-30/amazon-eks-nodegroup.yaml --parameters ParameterKey=KeyName,ParameterValue="ec2 key pair eks" ParameterKey=Subnet ParameterValue=subnet-08c284f77cfbd9d6b --capabilities CAPABILITY_IAM 
aws eks describe-cluster --name stockstat-cluster --query cluster.status
aws eks describe-cluster --name stockstat-cluster  --query cluster.endpoint --output text
aws eks describe-cluster --name stockstat-cluster  --query cluster.certificateAuthority.data --output text
aws sts get-caller-identity
. kube.sh
aws cloudformation delete-stack --stack-name stockstat-cluster-worker-nodes
aws eks delete-cluster --name stockstat-cluster
aws eks list-clusters

curl -O https://amazon-eks.s3-us-west-2.amazonaws.com/cloudformation/2018-08-30/aws-auth-cm.yaml
aws cloudformation describe-stacks --stack-name stockstat-cluster-worker-nodes | grep StackId
aws cloudformation describe-stacks --stack-name stockstat-cluster-worker-nodes|grep OutputValue|cut -f4 -d\"
export NODEINSTANCEROLE=`aws cloudformation describe-stacks --stack-name stockstat-cluster-worker-nodes|grep OutputValue|cut -f4 -d\"`
./aws-auth-cm.sh
#export STACKID=`aws cloudformation describe-stacks --stack-name stockstat-cluster-worker-nodes | grep StackId | cut -f4 -d\"`
kubectl apply -f aws-auth-cm-out.yaml

DOCKERLOGIN=`aws ecr get-login --no-include-email`
$DOCKERLOGIN
AWSACCOUNTID=`echo $DOCKERLOGIN|cut -f3 -d/|cut -f1 -d\.`

for X in pd eureka stockstatcore stockstatweb stockstaticlijcore stockstaticlijweb tensorflow spark; do
aws ecr create-repository --repository-name $X
done

export URIPD=`aws ecr describe-repositories --repository-names pd|grep repositoryUri|cut -f4 -d\"`
export URIEUREKA=`aws ecr describe-repositories --repository-names eureka|grep repositoryUri|cut -f4 -d\"`
export URICORE=`aws ecr describe-repositories --repository-names stockstatcore|grep repositoryUri|cut -f4 -d\"`
export URIWEB=`aws ecr describe-repositories --repository-names stockstatweb|grep repositoryUri|cut -f4 -d\"`
export URIICORE=`aws ecr describe-repositories --repository-names stockstaticlijcore|grep repositoryUri|cut -f4 -d\"`
export URIIWEB=`aws ecr describe-repositories --repository-names stockstaticlijweb|grep repositoryUri|cut -f4 -d\"`
export URITENSORFLOW=`aws ecr describe-repositories --repository-names tensorflow|grep repositoryUri|cut -f4 -d\"`
export URISPARK=`aws ecr describe-repositories --repository-names spark|grep repositoryUri|cut -f4 -d\"`

docker tag pd $URIPD:latest
docker push $URIPD:latest
docker tag stockstat-eureka $URIEUREKA:latest
docker push $URIEUREKA:latest
docker tag stockstat-core $URICORE:latest
docker push $URICORE:latest
docker tag stockstat-web $URIIWEB:latest
docker push $URIIWEB:latest
docker tag stockstat-iclij-core $URIICORE:latest
docker push $URIICORE:latest
docker tag stockstat-iclij-web $URIIWEB:latest
docker push $URIIWEB:latest
docker tag tensorflow $URITENSORFLOW:latest
docker push $URITENSORFLOW:latest
docker tag spark $URISPARK:latest
docker push $URISPARK:latest

kubectl run --image=centos/postgresql-10-centos7 --env="POSTGRESQL_USER=stockstat" --env="POSTGRESQL_PASSWORD=password" --env="POSTGRESQL_DATABASE=stockstat" --port=5432 --expose=true postgresql-10-centos7
kubectl run --image=$URIPD pd
kubectl run --image=$URIEUREKA stockstat-eureka
kubectl run --image=$URICORE stockstat-core
kubectl run --image=$URIWEB stockstat-web
kubectl run --image=$URIICORE stockstat-iclij-core
kubectl run --image=$URIIWEB stockstat-iclij-web
kubectl run --image=$URITENSORFLOW tensorflow
kubectl run --image=$URISPARK spark

aws iam create-service-linked-role --aws-service-name "elasticloadbalancing.amazonaws.com"

kubectl expose deployment stockstat-eureka --port 8761 --type=LoadBalancer
kubectl expose deployment stockstat-web --port 8180 --type=LoadBalancer
kubectl expose deployment stockstat-iclij-web --port 8181 --type=LoadBalancer
kubectl expose deployment spark --port 7077 --type=LoadBalancer
#kubectl expose deployment sparkui --port 8080 --type=LoadBalancer
kubectl expose deployment tensorflow --port 8000 --type=LoadBalancer

for X in pd eureka stockstatcore stockstatweb stockstaticlijcore stockstaticlijweb tensorflow spark; do
aws ecr delete-repository --repository-name $X --force
done
